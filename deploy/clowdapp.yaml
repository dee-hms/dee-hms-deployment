---
apiVersion: v1
kind: Template
labels:
  app: tang
  template: tang
metadata:
  name: tang
  annotations:
    description: API backend for tang server deployment in console.redhat.com

objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: tang-backend
      labels:
        app: tang-backend
        service: tang
    spec:
      envName: ${ENV_NAME}
      featureFlags: true
      testing:
        iqePlugin: tang
      deployments:
        - name: tang
          replicas: 1
          webServices:
            public:
              enabled: true
              apiPath: dee-hms
          podSpec:
            image: ${IMAGE}:${IMAGE_TAG}
            command:
              - /usr/bin/tangd-entrypoint
            env:
              - name: PORT
                value: ${ADV_INTERNAL_PORT}
            livenessProbe:
              exec:
                command:
                - /usr/bin/tangd-health-check
              initialDelaySeconds: 5
              periodSeconds: 5
              timeoutSeconds: 15
            readinessProbe:
              exec:
                command:
                - /usr/bin/tangd-health-check
              initialDelaySeconds: 27
              periodSeconds: 10
              timeoutSeconds: 5
      database:
        name: tang
        version: 13

# possible application ENV variables are in config/api.env.example
parameters:
  - description: ClowdEnv Name
    name: ENV_NAME
    value: "Tang"
  - description: Cpu limit of service
    name: CPU_LIMIT
    value: "1"
  - description: Cpu request increment
    name: CPU_REQUESTS
    value: 100m
  - description: memory limit of service
    name: MEMORY_LIMIT
    value: 1Gi
  - description: memory request increment
    name: MEMORY_REQUESTS
    value: 100Mi
  - description: Image tag
    name: IMAGE_TAG
    value: latest
  - description: Image name
    name: IMAGE
    value: quay.io/sec-eng-special/tang
  - description: Advertising internal port
    name: ADV_INTERNAL_PORT
    value: "8000"
  - description: Logging level (trace, debug, info, warn, error, fatal, panic)
    name: LOGGING_LEVEL
    value: "debug"
  - description: Postgres driver logging level (trace, debug, info, warn, error, fatal, panic)
    name: DATABASE_LOGGING_LEVEL
    value: "debug"
  - description: OpenTelemetry collecting
    name: TELEMETRY_ENABLED
    value: "true"
  - description: OpenTelemetry export into the logger
    name: TELEMETRY_LOGGER_ENABLED
    value: "true"
  - description: Enable compression of the API responses
    name: APP_COMPRESSION
    value: "true"
  - description: Determines Clowder deployment
    name: CLOWDER_ENABLED
    value: "true"
  - description: ImageBuilder service URL
    name: IMAGEBUILDER_URL
    required: false
    value: "http://image-builder:8080"
  - description: Instance prefix adds string to all instance names, leave blank for production
    name: APP_INSTANCE_PREFIX
    value: ""
  - description: Application cache type (none, memory or redis)
    name: APP_CACHE_TYPE
    value: "redis"
  - description: Internal queue type (memory/sqs/postgres).
    name: WORKER_QUEUE
    value: "redis"
  - description: Internal queue concurrency, how many goroutines to run in parallel. Not used in 'redis' mode.
    name: WORKER_CONCURRENCY
    value: "100"
  - description: Internal queue heartbeat interval. How often to update job liveness information. Not used in 'redis' mode.
    name: WORKER_HEARTBEAT
    value: "30s"
  - description: Internal queue beat threshold. Now many times the beat can be updated until job is cancelled. Not used in 'redis' mode.
    name: WORKER_MAX_BEATS
    value: "10"
